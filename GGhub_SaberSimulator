local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")

local plr = Players.LocalPlayer
local char, hum, hrp

local function updateCharacter(c)
	c = c or plr.Character or plr.CharacterAdded:Wait()
	char = c
	hum = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed, defaultJumpPower = 24, 60
getgenv().currentLocation, getgenv().currentBoss = nil, nil

getgenv().SendNotification = function(title, content, duration, image)
	if Rayfield then
		Rayfield:Notify({
			Title = title or "GG hub",
			Content = content or "",
			Duration = duration or 3,
			Image = image or 5107182098,
		})
	end
end

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
local Window = Rayfield:CreateWindow({
	Name = "GG hub - " .. gameName,
	Icon = 16570037140,
	LoadingTitle = "Loading...",
	LoadingSubtitle = "by DNzinGG",
	ShowText = "GG hub",
	Theme = "Amethyst",
	ToggleUIKeybind = "K",
	DisableRayfieldPrompts = true,
	DisableBuildWarnings = true,
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "GG_hub",
		FileName = "GG hub - Saber Simulator"
	}
})

local Main = Window:CreateTab("Main", 124620632231839)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Change WalkSpeed",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = hum and hum.WalkSpeed or defaultWalkSpeed,
	Callback = function(Value)
		if hum then hum.WalkSpeed = Value end
	end,
})

local SliderJumpPower = Others:CreateSlider({
	Name = "Change JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = hum and hum.JumpPower or defaultJumpPower,
	Callback = function(Value)
		if hum then
			hum.UseJumpPower = true
			task.wait()
			hum.JumpPower = Value
		end
	end,
})

Others:CreateButton({
	Name = "Reset WalkSpeed",
	Callback = function()
		if hum then
			hum.WalkSpeed = defaultWalkSpeed
			SliderWalkSpeed:Set(defaultWalkSpeed)
		end
	end
})

Others:CreateButton({
	Name = "Reset JumpPower",
	Callback = function()
		if hum then
			hum.JumpPower = defaultJumpPower
			SliderJumpPower:Set(defaultJumpPower)
		end
	end
})

local jumpConnection
Others:CreateToggle({
	Name = "Infinite Jump",
	CurrentValue = false,
	Flag = "ToggleInfiniteJump",
	Callback = function(Value)
		if jumpConnection then jumpConnection:Disconnect() end
		if Value then
			jumpConnection = UserInputService.JumpRequest:Connect(function()
				local h = plr.Character and plr.Character:FindFirstChild("Humanoid")
				if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
			end)
		end
	end,
})

Others:CreateButton({
	Name = "Get TP Tool",
	Callback = function()
		local Backpack = plr:WaitForChild("Backpack")
		if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
		local tool = Instance.new("Tool")
		tool.Name = "TPTool"
		tool.RequiresHandle = false
		tool.CanBeDropped = false
		tool.Parent = Backpack
		local soundId = "rbxassetid://9118823109"
		tool.Activated:Connect(function()
			local mouse = plr:GetMouse()
			local root = char and char:FindFirstChild("HumanoidRootPart")
			if not root then return end
			local targetPos = mouse.Hit.Position + Vector3.new(0, 3, 0)
			local sound = Instance.new("Sound")
			sound.SoundId = soundId
			sound.Volume = 1
			sound.Parent = root
			sound:Play()
			Debris:AddItem(sound, 2)
			root.CFrame = CFrame.new(targetPos)
		end)
	end,
})

Others:CreateButton({
	Name = "Force Reset",
	Callback = function()
		local h = char and char:FindFirstChildOfClass("Humanoid")
		if h then h.Health = 0 end
	end
})

Others:CreateButton({
	Name = "Fly Gui",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
		end)
	end
})

Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(Value)
		getgenv().noClip = Value
		task.spawn(function()
			while noClip do
				task.wait(0.05)
				if char then
					for _, v in pairs(char:GetChildren()) do
						if v:IsA("MeshPart") or v:IsA("Part") then
							v.CanCollide = not noClip
						end
					end
				end
			end
		end)
	end,
})

Main:CreateToggle({
	Name = "Auto Swing",
	CurrentValue = false,
	Flag = "ToggleAutoSwing",
	Callback = function(Value)
		getgenv().autoSwing = Value
		task.spawn(function()
			while autoSwing do
				task.wait(0.1)
				local tool = plr.Backpack:FindFirstChildOfClass("Tool") or char:FindFirstChildOfClass("Tool")
				if tool and tool.Parent == plr.Backpack then tool.Parent = char end
				local events = game:GetService("ReplicatedStorage"):WaitForChild("Events")
				if events:FindFirstChild("SwingSaber") then
					events.SwingSaber:FireServer()
					local args = {{ }}
					local remote = plr.Character and plr.Character:FindFirstChild("Starter") and plr.Character.Starter:FindFirstChild("RemoteClick")
					if remote then remote:FireServer(unpack(args)) end
				end
			end
		end)
	end,
})

Main:CreateToggle({
	Name = "Auto Sell Strength",
	CurrentValue = false,
	Flag = "ToggleAutoSellStrength",
	Callback = function(Value)
		getgenv().autoStrength = Value
		task.spawn(function()
			while autoStrength do
				task.wait(0.2)
				local strength = plr:FindFirstChild("leaderstats") and plr.leaderstats:FindFirstChild("Strength")
				local amountLabel = plr:FindFirstChild("PlayerGui") and plr.PlayerGui.MainGui.StartFrame.Currency.Strength.Amount
				if not strength or not amountLabel then continue end
				local text = amountLabel.Text or ""
				local currentStr, maxStr = string.match(text, "(%d+)%s*/%s*(%d+)")
				if not (currentStr and maxStr) then continue end
				local current, max = tonumber(currentStr), tonumber(maxStr)
				if current and max and current >= max then
					local events = game:GetService("ReplicatedStorage"):WaitForChild("Events")
					if events:FindFirstChild("SellStrength") then
						events.SellStrength:FireServer()
					end
				end
			end
		end)
	end,
})

Main:CreateToggle({
	Name = "Auto Crown",
	CurrentValue = false,
	Flag = "ToggleAutoCrown",
	Callback = function(Value)
		getgenv().autoCrown = Value
		task.spawn(function()
			while autoCrown do
				task.wait(1.5)
				for _, v in pairs(workspace.Gameplay.CurrencyPickup.CurrencyHolder:GetChildren()) do
					if v.Name == "Crown" and v:FindFirstChildOfClass("TouchTransmitter") then
						firetouchinterest(hrp, v, 0)
					end
				end
			end
		end)
	end,
})

Main:CreateToggle({
	Name = "Auto Koth",
	CurrentValue = false,
	Flag = "ToggleAutoKoth",
	Callback = function(Value)
		getgenv().autoFlag = Value
		task.spawn(function()
			local originalCFrame = hrp.CFrame
			while autoFlag do
				task.wait(0.05)
				if Workspace:FindFirstChild("Gameplay") and Workspace.Gameplay:FindFirstChild("KOTH") then
					local koth = Workspace.Gameplay.KOTH:FindFirstChild("KOH_BOUNDARY")
					if koth then hrp.CFrame = koth.CFrame + Vector3.new(0, -2.5, 0) end
				end
			end
			if hrp and originalCFrame then hrp.CFrame = originalCFrame end
		end)
	end,
})

local function GetLocations()
	local locations = {}
	for _, v in ipairs(workspace.Gameplay.Locations:GetChildren()) do
		if v:IsA("Part") then table.insert(locations, v.Name) end
	end
	return #locations > 0 and locations or {"None"}
end

Teleports:CreateDropdown({
	Name = "Select Location",
	Options = GetLocations(),
	CurrentOption = nil,
	Flag = "DropdownSelectLocation",
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentLocation = Option or nil
	end,
})

Teleports:CreateButton({
	Name = "Teleport To Location",
	Callback = function()
		if currentLocation then
			for _, v in pairs(workspace.Gameplay.Locations:GetChildren()) do
				if v.Name == currentLocation then
					hrp.CFrame = v.CFrame
					break
				end
			end
		end
	end,
})

Teleports:CreateButton({
	Name = "Teleport To Spawn",
	Callback = function()
		local spawns = workspace.Gameplay.SpawnLocations:GetChildren()
		if #spawns == 0 then return end
		local randomSpawn = spawns[math.random(1, #spawns)] --
	if randomSpawn:IsA("SpawnLocation") then
		hrp.CFrame = randomSpawn.CFrame + Vector3.new(0, 1, 0)
		task.wait()
		hum.Health = 0
		end
	end,
})

Main:CreateDropdown({
	Name = "Select Boss",
	Options = {"1"},
	CurrentOption = nil,
	MultipleOptions = false,
	Flag = "DropdownSelectBoss",
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentBoss = Option or nil
	end,
})

Main:CreateToggle({
	Name = "Auto Kill Boss",
	CurrentValue = false,
	Flag = "ToggleAutoKillBoss",
	Callback = function(Value)
		getgenv().autoBoss = Value
		task.spawn(function()
			while autoBoss and currentBoss == "1" do
				task.wait(0.001)
				hrp.CFrame = CFrame.new(405, 186, 165)
				local tool = plr.Backpack:FindFirstChildOfClass("Tool") or char:FindFirstChildOfClass("Tool")
				if tool and tool.Parent == plr.Backpack then tool.Parent = char end
				local args = {{Workspace.Gameplay.Boss.BossHolder.Boss}}
				local remote = plr.Character.Starter and plr.Character.Starter:FindFirstChild("RemoteClick")
				if remote then remote:FireServer(unpack(args)) end
			end
		end)
	end,
})

local ButtonTeleportToHallowenEvent = Teleports:CreateButton({
	Name = "Teleport to Halloween Event",
	Callback = function()
	hrp.CFrame = workspace.Gameplay.Map.HalloweenPortal.Portal.Part.CFrame
	end,
})

local ButtonAntiLag = Others:CreateButton({ Name = "Anti Lag", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/LegiteriumZ/RobloxScript/main/binh%20hub%20fps%20booster%20v1.lua"))() end,})
local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})
