local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local TS = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")

local char, hum, hrp
local function updateCharacter(c)
    char = c or plr.Character or plr.CharacterAdded:Wait()
    hum = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

for _,v in pairs(game.Workspace.Bases:GetDescendants()) do
if v:IsA("Model") and v:FindFirstChild("PlotTeritory") then
if v.PlotTeritory:GetAttribute("Player") == plr.Name then
plrBase = v
end
end
end

local defaultWalkSpeed = plr.Character.Humanoid.WalkSpeed or 16
local defaultJumpPower = plr.Character.Humanoid.JumpPower or 50
getgenv().startPosition, getgenv().finalPosition, getgenv().currentSelectBase = nil, nil, nil

getgenv().SendNotification = function(title, content, duration, image)
if Rayfield then
        Rayfield:Notify({
   Title = title or "GG hub",
   Content = content or "",
   Duration = duration or 3,
   Image = image or 5107182098,
})
end
end

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
local Window = Rayfield:CreateWindow({
    Name = "GG hub - " .. gameName,
    Icon = 16570037140,
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by DNzinGG",
    ShowText = "GG hub",
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
    ConfigurationSaving = { Enabled = true, FolderName = "GG_hub", FileName = "GG hub - RIP Brainrot" }
})

local Main = Window:CreateTab("Main", 124620632231839)
local Esp = Window:CreateTab("Esp", 120129574453255)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Change WalkSpeed",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultWalkSpeed,
	Callback = function(v)
		getgenv().currentWalkSpeed = v
	end,
})

local InputWalkSpeed = Others:CreateInput({
	Name = "Input WalkSpeed",
	CurrentValue = tostring(defaultWalkSpeed),
	PlaceholderText = tostring(defaultWalkSpeed),
	RemoveTextAfterFocusLost = false,
	Flag = "InputWalkSpeed",
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentWalkSpeed = num
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid WalkSpeed value, use numbers!", 2)
		end
	end,
})

task.spawn(function()
	while task.wait(0.05) do
		if hum then
			pcall(function()
				hum.WalkSpeed = tonumber(getgenv().currentWalkSpeed) or defaultWalkSpeed
			end)
		end
	end
end)

local SliderJumpPower = Others:CreateSlider({
	Name = "Change JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultJumpPower,
	Callback = function(Value)
		if hum then
			hum.UseJumpPower = true
			hum.JumpPower = Value
		end
	end,
})

local InputJumpPower = Others:CreateInput({
	Name = "Input JumpPower",
	CurrentValue = tostring(defaultJumpPower),
	PlaceholderText = tostring(defaultJumpPower),
	RemoveTextAfterFocusLost = false,
	Flag = "InputJumpPower",
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentJumpPower = num
				if hum then hum.JumpPower = num end
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid JumpPower value, use numbers!", 2)
		end
	end,
})

Others:CreateButton({ Name = "Reset WalkSpeed", Callback = function() if hum then hum.WalkSpeed = defaultWalkSpeed SliderWalkSpeed:Set(defaultWalkSpeed) InputWalkSpeed:Set(tostring(defaultWalkSpeed)) end end })
Others:CreateButton({ Name = "Reset JumpPower", Callback = function() if hum then hum.JumpPower = defaultJumpPower SliderJumpPower:Set(defaultJumpPower) InputJumpPower:Set(tostring(defaultJumpPower)) end end })

local jumpConnection
Others:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "ToggleInfiniteJump",
    Callback = function(Value)
        if jumpConnection then jumpConnection:Disconnect() end
        if Value then
            jumpConnection = UserInputService.JumpRequest:Connect(function()
                local h = plr.Character and plr.Character:FindFirstChild("Humanoid")
                if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        end
    end,
})

Others:CreateButton({
    Name = "Get TP Tool",
    Callback = function()
        local Backpack = plr:WaitForChild("Backpack")
        if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
        local tool = Instance.new("Tool")
        tool.Name = "TPTool"
        tool.RequiresHandle = false
        tool.CanBeDropped = false
        tool.Parent = Backpack
        local soundId = "rbxassetid://9118823109"
        tool.Activated:Connect(function()
            local mouse = plr:GetMouse()
            local root = char and char:FindFirstChild("HumanoidRootPart")
            if not root then return end
            local targetPos = mouse.Hit.Position + Vector3.new(0,3,0)
            local sound = Instance.new("Sound")
            sound.SoundId = soundId
            sound.Volume = 1
            sound.Parent = root
            sound:Play()
            Debris:AddItem(sound, 2)
            root.CFrame = CFrame.new(targetPos)
        end)
    end,
})

Others:CreateButton({ Name = "Force Reset", Callback = function() local h = char and char:FindFirstChildOfClass("Humanoid"); if h then h.Health = 0 end end })
Others:CreateButton({ Name = "Fly Gui", Callback = function() pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() end) end })

local ToggleNoClip = Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(Value)
		getgenv().noClip = Value
		task.spawn(function()
			while noClip do task.wait(0.001)
				if char then
					for _, v in pairs(char:GetChildren()) do
						if (v:IsA("MeshPart") or v:IsA("Part")) then
							v.CanCollide = not noClip
						end
					end
				end
			end
		end)
	end,
})

local ButtonAntiLag = Others:CreateButton({ Name = "Anti Lag", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/LegiteriumZ/RobloxScript/main/binh%20hub%20fps%20booster%20v1.lua"))() end,})
local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})

local ToggleAutoLockBase = Main:CreateToggle({
	Name = "Auto Lock Base",
	CurrentValue = false,
	Flag = "Auto Lock Base",
	Callback = function(Value)
	getgenv().autoLockBase = Value

while autoLockBase do task.wait(0.01)
task.spawn(function()
local timer = plrBase.LockgateButton.Button.LockTimer.Frame.TextLabel

if timer.Text == "0s" or timer.Text == "Lock base" then
local args = {
	{
		plrBase.LockgateButton.Button,
		"\019"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("ncxyzero_bridgenet2-fork@1.1.5"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
else
return
end
end)
end
	end,
})

	Main:CreateToggle({
		Name = "Auto Attack",
		CurrentValue = false,
		Flag = "ToggleAutoAttack",
		Callback = function(Value)
			getgenv().autoAttack = Value
			
			if Value then
				task.spawn(function()
					while getgenv().autoAttack do
						task.wait(0.01)
						pcall(function()
							local backpack = plr:FindFirstChild("Backpack")
							local character = plr.Character
							local tool = nil
							if character then tool = character:FindFirstChildOfClass("Tool") end
							if not tool and backpack then
								tool = backpack:FindFirstChildOfClass("Tool")
								if tool then tool.Parent = character end
							end
task.wait(0.0001)
									pcall(function()
										if tool:FindFirstChild("Activate") or tool.Activate then
											tool:Activate()
									end
									end)
						end)
					end
				end)
			end
		end,
})

local ButtonSetStartPosition = Main:CreateButton({
	Name = "Set Start Position",
	Callback = function()
	getgenv().startPosition = hrp.CFrame
	SendNotification("Start Position:", tostring(hrp.Position), 2)
	end,
})

local ButtonSetFinalPosition = Main:CreateButton({
	Name = "Set Final Position",
	Callback = function()
	getgenv().finalPosition = hrp.CFrame
	SendNotification("Final Position:", tostring(hrp.Position), 2)
	end,
})

local ButtonTeleportToStartPosition = Main:CreateButton({
	Name = "Teleport To Start Position",
	Callback = function()
	if hrp and getgenv().startPosition ~= nil then
	hrp.CFrame = getgenv().startPosition
	end
	end,
})

local ButtonTeleportToFinalPosition = Main:CreateButton({
	Name = "Teleport To Final Position",
	Callback = function()
	if hrp and getgenv().finalPosition ~= nil then
	hrp.CFrame = getgenv().finalPosition
	end
	end,
})

local ToggleAutoCollectMoney = Main:CreateToggle({
	Name = "Auto Collect Money",
	CurrentValue = false,
	Flag = "ToggleAutoCollectMoney",
	Callback = function(Value)
		getgenv().autoCollect = Value
		
		task.spawn(function()
			while getgenv().autoCollect do
				task.wait(0.7)
				pcall(function()
					if not plrBase or not plrBase:FindFirstChild("PlotSlots") then return end
					
					for _, v in pairs(plrBase.PlotSlots:GetChildren()) do
						if v:GetAttribute("Taken") == true and v:FindFirstChild("ClaimButton") then
							local button = v.ClaimButton:FindFirstChild("Button")
							if button then
								local args = {
									{
										button,
										"\020"
									}
								}
								game:GetService("ReplicatedStorage")
									:WaitForChild("ncxyzero_bridgenet2-fork@1.1.5")
									:WaitForChild("dataRemoteEvent")
									:FireServer(unpack(args))
								task.wait(0.001)
							end
						end
					end
				end)
			end
		end)
	end,
})

local EspBrainrotColor = Color3.fromRGB(85, 255, 0)

Esp:CreateColorPicker({
    Name = "ESP Brainrot Color",
    Color = EspBrainrotColor,
    Callback = function(Value)
        EspBrainrotColor = Value
    end,
})

Esp:CreateToggle({
    Name = "Auto Esp Brainrots From Road",
    CurrentValue = false,
    Flag = "ToggleAutoEspBrainrotsFromRoad",
    Callback = function(Value)
        getgenv().autoEsp = Value
        task.spawn(function()
            while true do
                task.wait(0.3)
                local folder = workspace:FindFirstChild("BrainrotRunway")
                if not folder or not folder:FindFirstChild("BrainrotsWalking") then continue end

                for _, v in pairs(folder.BrainrotsWalking:GetChildren()) do
                    if not getgenv().autoEsp then
                        if v:FindFirstChild("GG_Highlight") then v.GG_Highlight:Destroy() end
                        if v:FindFirstChild("GG_Billboard") then v.GG_Billboard:Destroy() end
                        for _, child in pairs(v:GetDescendants()) do
                            if child:IsA("BillboardGui") and child.Name == "GG_Billboard" then
                                child:Destroy()
                            end
                        end
                    end
                end

                if not getgenv().autoEsp then break end

                for _, v in pairs(folder.BrainrotsWalking:GetChildren()) do
                    if v:IsA("Model") and v:GetAttribute("ConfigName") and not v:FindFirstChild("GG_Highlight") then
                        local adornee = v.PrimaryPart or v:FindFirstChildWhichIsA("BasePart")
                        if not adornee then
                            for _, part in ipairs(v:GetChildren()) do
                                if part:IsA("BasePart") then
                                    adornee = part
                                    break
                                end
                            end
                        end
                        if not adornee then continue end

                        local esp = Instance.new("Highlight")
                        esp.Name = "GG_Highlight"
                        esp.FillTransparency = 0.3
                        esp.OutlineTransparency = 0
                        esp.FillColor = EspBrainrotColor
                        esp.Adornee = v
                        esp.Parent = v

                        local gui = Instance.new("BillboardGui")
                        gui.Name = "GG_Billboard"
                        gui.AlwaysOnTop = true
                        gui.MaxDistance = 5000
                        gui.Size = UDim2.new(0, 120, 0, 25)
                        gui.StudsOffset = Vector3.new(0, 6, 0)
                        gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
                        gui.Adornee = adornee
                        gui.Parent = adornee

                        local label = Instance.new("TextLabel")
                        label.Size = UDim2.new(1, 0, 1, 0)
                        label.BackgroundTransparency = 1
                        label.Text = tostring(v:GetAttribute("ConfigName") or "Brainrot")
                        label.TextColor3 = EspBrainrotColor
                        label.TextScaled = true
                        label.Font = Enum.Font.FredokaOne
                        label.Parent = gui

                        local stroke = Instance.new("UIStroke")
                        stroke.Thickness = 2.8
                        stroke.Color = Color3.fromRGB(0, 0, 0)
                        stroke.Transparency = 0
                        stroke.Parent = label
                    end
                end
            end
        end)
    end,
})

local ButtonTeleportToYouBase = Teleports:CreateButton({
	Name = "Teleport To You Base",
	Callback = function()
	hrp.CFrame = plrBase.Union.CFrame + Vector3.new(0, 4.5, 0)
	end,
})

local function GetBases()
    local bases = {}
    for _, v in ipairs(game.Workspace.Bases:GetChildren()) do
        if v:IsA("Model") then table.insert(bases, v.Name) end
    end
    if #bases == 0 then table.insert(bases, nil) end
    return bases
end
local DropdownSelectBaseToTeleport = Teleports:CreateDropdown({
	Name = "Select Base To Teleport",
	Options = GetBases(),
	CurrentOption = nil,
	Flag = "DropdownSelectBaseToTeleport",
	Callback = function(Option)
	if type(Option) == "table" then Option = Option[1] end
        getgenv().currentSelectBase = Option or nil
	end,
})

local ButtonTeleportToSelectBase = Teleports:CreateButton({
	Name = "Teleport To Select Base",
	Callback = function()
	if getgenv().currentSelectBase ~= nil then
	for _, v in ipairs(game.Workspace.Bases:GetChildren()) do
        if v:IsA("Model") and v.Name == currentSelectBase then
	hrp.CFrame = v.Union.CFrame + Vector3.new(0, 3.5, 0)
	end
	end
	end
	end,
})

local ToggleAutoRebirth = Main:CreateToggle({
	Name = "Auto Rebirth",
	CurrentValue = false,
	Flag = "ToggleAutoRebirth",
	Callback = function(Value)
	getgenv().autoRebirth = Value
	
	while autoRebirth do task.wait(0.1)
	local args = {
	{
		{
			"\001",
			"\205(\224\199p\247Ez\174{\185P\026\192\243\a",
			{}
		},
		"\v"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("ncxyzero_bridgenet2-fork@1.1.5"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
	end
	end,
})

local ToggleAutoWheelSpin = Main:CreateToggle({
	Name = "Auto Wheel Spin",
	CurrentValue = false,
	Flag = "ToggleAutoWheelSpin",
	Callback = function(Value)
	getgenv().autoSpin = Value
	
	while autoSpin do task.wait(0.3)
	local ticket = workspace.KoloFortuny.TicketCounter.DisplayPart.SurfaceGui.Price.PriceText
	
	if ticket.Text ~= "0" then
	local args = {
	{
		{
			"\001",
			"x14\156F\172A\183\139\213\146\208\218\165\201\235",
			{}
		},
		"\""
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("ncxyzero_bridgenet2-fork@1.1.5"):WaitForChild("dataRemoteEvent"):FireServer(unpack(args))
else
return
	end
	end
	end,
})

Rayfield:LoadConfiguration()
