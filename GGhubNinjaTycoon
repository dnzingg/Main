local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local TS = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local char, hum
local function updateCharacter(c)
	char = c or plr.Character or plr.CharacterAdded:Wait()
	hum = char:WaitForChild("Humanoid")
end
if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed = hum.WalkSpeed or 16
local defaultJumpPower = hum.JumpPower or 50
local originalTool = "Combat"

local Window = Rayfield:CreateWindow({
   Name = "GG hub - Ninja Tycoon",
   Icon = 0,
   LoadingTitle = "Loading...",
   LoadingSubtitle = "by DNzinGG",
   ShowText = "GG hub",
   Theme = "Dark Blue",
   ToggleUIKeybind = "K",
   ConfigurationSaving = { Enabled = false, FolderName = "GG_hub", FileName = "GG hub - Ninja Tycoon" }
})

local Main = Window:CreateTab("Main", "rewind")
local Teleports = Window:CreateTab("Teleports", "rewind")
local Others = Window:CreateTab("Others", "rewind")

local function getTools()
	local tools = {}
	local backpack = plr:FindFirstChild("Backpack")
	if backpack then
		for _, v in ipairs(backpack:GetChildren()) do
			if v:IsA("Tool") then table.insert(tools, v.Name) end
		end
	end
	if #tools == 0 then table.insert(tools, "Combat") end
	return tools
end

local DropdownSelectWeapon = Main:CreateDropdown({
   Name = "Select weapon to use",
   Options = getTools(),
   CurrentOption = {"Combat"},
   MultipleOptions = false,
   Flag = "SelectWeaponToUse",
   Callback = function(Option)
      if type(Option) == "table" then Option = Option[1] end
      originalTool = Option or "Combat"
   end,
})

Main:CreateButton({
	Name = "Refresh Weapon",
	Callback = function()
		DropdownSelectWeapon:Refresh(getTools())
	end,
})

local SliderWalkSpeed = Others:CreateSlider({
   Name = "Change WalkSpeed",
   Range = {0, 1000},
   Increment = 1,
   CurrentValue = hum.WalkSpeed,
   Callback = function(Value) if hum then hum.WalkSpeed = Value end end,
})

local SliderJumpPower = Others:CreateSlider({
   Name = "Change JumpPower",
   Range = {0, 500},
   Increment = 1,
   CurrentValue = hum.JumpPower,
   Callback = function(Value) if hum then hum.JumpPower = Value end end,
})

Others:CreateButton({ Name = "Reset WalkSpeed", Callback = function() if hum then hum.WalkSpeed = defaultWalkSpeed; SliderWalkSpeed:Set(defaultWalkSpeed) end end })
Others:CreateButton({ Name = "Reset JumpPower", Callback = function() if hum then hum.JumpPower = defaultJumpPower; SliderJumpPower:Set(defaultJumpPower) end end })

Others:CreateButton({
   Name = "Get TP Tool",
   Callback = function()
      local Backpack = plr:WaitForChild("Backpack")
      if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
      local tool = Instance.new("Tool")
      tool.Name = "TPTool" tool.RequiresHandle = false tool.CanBeDropped = false tool.Parent = Backpack
      local soundId = "rbxassetid://9118823109"
      tool.Activated:Connect(function()
         local mouse = plr:GetMouse()
         local character = plr.Character
         if not character then return end
         local root = character:FindFirstChild("HumanoidRootPart")
         if not root then return end
         local targetPos = mouse.Hit.Position + Vector3.new(0, 3, 0)
         local sound = Instance.new("Sound") sound.SoundId = soundId sound.Volume = 1 sound.Parent = root sound:Play()
         game.Debris:AddItem(sound, 2)
         root.CFrame = CFrame.new(targetPos)
      end)
   end,
})

Others:CreateButton({ Name = "Force Reset", Callback = function() local h = plr.Character and plr.Character:FindFirstChildOfClass("Humanoid"); if h then h.Health = 0 end end })
Others:CreateButton({ Name = "Fly Gui", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() end })

local function notify(msg)
    StarterGui:SetCore("SendNotification", {
        Title = "Scroll Collector",
        Text = msg,
        Duration = 3
    })
end

local function findPromptAndPart(root)
	for _, d in ipairs(root:GetDescendants()) do
		if d:IsA("ProximityPrompt") then
			return d, d.Parent
		end
	end
	local part = root:FindFirstChildWhichIsA("BasePart") or root.PrimaryPart
	return nil, part
end

local function collectScrolls()
	local character = plr.Character
	local hrp = character and character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	for _, obj in ipairs(Workspace:GetChildren()) do
		local name = obj.Name or ""
		if type(name) == "string" and (name == "CashScroll" or name == "EScroll" or name:match("Scroll")) then
			if not obj or not obj.Parent then break end
			local prompt, part = findPromptAndPart(obj)
			if prompt and part and part:IsA("BasePart") then
				pcall(function() hrp.CFrame = part.CFrame + Vector3.new(0, 2.5, 0) end)
				task.wait(0.12)
				pcall(function() fireproximityprompt(prompt) end)
				notify("Get: " .. obj.Name)
				task.wait(0.2)
			elseif part and part:IsA("BasePart") then
				pcall(function() hrp.CFrame = part.CFrame + Vector3.new(0, 2.5, 0) end)
				task.wait(0.12)
				pcall(function()
					firetouchinterest(hrp, part, 0)
					task.wait(0.05)
					firetouchinterest(hrp, part, 1)
				end)
				notify("Get: " .. obj.Name)
				task.wait(0.2)
			end
		end
	end
end

local function findNearestNPC(hrp)
	if not hrp then return nil end
	local nearest = nil
	local minDist = math.huge
	for _, obj in ipairs(Workspace:GetChildren()) do
		if obj:IsA("Model") and (obj.Name == "Rogue Ninja" or obj.Name == "Reanimated Ninja") then
			local npcHrp = obj:FindFirstChild("HumanoidRootPart")
			local npcHum = obj:FindFirstChildOfClass("Humanoid")
			if npcHrp and npcHum and npcHum.Health > 0 then
				local dist = (npcHrp.Position - hrp.Position).Magnitude
				if dist < minDist then minDist = dist nearest = obj end
			end
		end
	end
	return nearest
end

local function attackNPC(npc)
	if not npc or not char or not hum then return end
	local npcHum = npc:FindFirstChildOfClass("Humanoid")
	local npcHrp = npc:FindFirstChild("HumanoidRootPart")
	if not npcHum or not npcHrp then return end

	while npcHum.Parent and npcHum.Health > 0 and hum.Health > 0 and getgenv().autoCash do
		task.spawn(function()
			collectScrolls()
		end)

		pcall(function()
			local root = char and char:FindFirstChild("HumanoidRootPart")
			if root then root.CFrame = npcHrp.CFrame * CFrame.new(0, 0, 3.5) end
		end)

		local toolObj = (char and char:FindFirstChild(originalTool)) or plr.Backpack:FindFirstChild(originalTool)
		if toolObj and toolObj.Parent ~= char then
			pcall(function() toolObj.Parent = char end)
			task.wait(0.06)
		end

		local combatTool = (char and char:FindFirstChild(originalTool))
		if combatTool then
			if combatTool:FindFirstChild("Attack") then
				pcall(function() combatTool.Attack:FireServer() end)
			else
				pcall(function() if combatTool.Activate then combatTool:Activate() end end)
			end
		end

		local seishaRemote = char:FindFirstChild("SeishaAttack") and char.SeishaAttack:FindFirstChild("RemoteEvent")
		if seishaRemote then
			pcall(function() seishaRemote:FireServer() end)
		end

		task.wait(0.18)
	end
end

Main:CreateToggle({
	Name = "Auto Cash",
	CurrentValue = false,
	Callback = function(AutoCash)
		getgenv().autoCash = AutoCash
		if getgenv().autoCash then
			task.spawn(function()
				while getgenv().autoCash do
					task.wait(0.15)
					local hrp = char and char:FindFirstChild("HumanoidRootPart")
					if hrp then
						collectScrolls()
						local target = findNearestNPC(hrp)
						if target then
							attackNPC(target)
						else
							task.wait(0.5)
						end
					else
						task.wait(0.5)
					end
				end
			end)
		end
	end,
})

Teleports:CreateButton({ Name = "Teleport to Store", Callback = function()
	local hrp = char and char:FindFirstChild("HumanoidRootPart")
	if hrp then hrp.CFrame = CFrame.new(764, 732, -486) end
end })

Teleports:CreateButton({ Name = "Teleport to your Tycoon", Callback = function()
	local hrp = char and char:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	local kit = Workspace:FindFirstChild("Zednov's Tycoon Kit")
	if not kit then return end
	for _, base in pairs(kit.Tycoons:GetChildren()) do
		if base:FindFirstChild("Owner") and base.Owner.Value == plr and base:FindFirstChild("Essentials") and base.Essentials:FindFirstChild("Spawn") then
			hrp.CFrame = base.Essentials.Spawn.CFrame
		end
	end
end })

Main:CreateToggle({ Name = "Auto collect Cash from your Tycoon", CurrentValue = false, Callback = function(Value)
	getgenv().autoCollectCash = Value
	task.spawn(function()
		while getgenv().autoCollectCash do task.wait(1)
			local hrp = char and char:FindFirstChild("HumanoidRootPart")
			if not hrp then task.wait(0.5) continue end
			local kit = Workspace:FindFirstChild("Zednov's Tycoon Kit")
			if not kit then task.wait(0.5) continue end
			for _, base in pairs(kit.Tycoons:GetChildren()) do
				if base.Owner and base.Owner.Value == plr and base.Essentials and base.Essentials:FindFirstChild("Giver") then
					pcall(function()
						firetouchinterest(hrp, base.Essentials.Giver, 0)
						task.wait()
						firetouchinterest(hrp, base.Essentials.Giver, 1)
					end)
				end
			end
		end
	end)
end })
