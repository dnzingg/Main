local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local TS = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

local char, hum, hrp
local function updateCharacter(c)
    char = c or plr.Character or plr.CharacterAdded:Wait()
    hum = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed = 16
local defaultJumpPower = 50
getgenv().currentGetGun = nil

getgenv().SendNotification = function(title, content, duration, image)
if Rayfield then
        Rayfield:Notify({
   Title = title or "GG hub",
   Content = content or "",
   Duration = duration or 3,
   Image = image or 5107182098,
})
end
end

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
local Window = Rayfield:CreateWindow({
   Name = "GG hub - " .. gameName,
   Icon = 16570037140,
   LoadingTitle = "Loading...",
   LoadingSubtitle = "by DNzinGG",
   ShowText = "GG hub",
   Theme = "Amethyst",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "GG_hub",
      FileName = "GG hub - Prison Life"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   }
})

local Main = Window:CreateTab("Main", 124620632231839)
local Shop = Window:CreateTab("Shop", 11385419674)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Change WalkSpeed",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultWalkSpeed,
	Callback = function(v)
		getgenv().currentWalkSpeed = v
	end,
})

local InputWalkSpeed = Others:CreateInput({
	Name = "Input WalkSpeed",
	CurrentValue = tostring(defaultWalkSpeed),
	PlaceholderText = tostring(defaultWalkSpeed),
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentWalkSpeed = num
				SliderWalkSpeed:Set(num)
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid WalkSpeed value, use numbers!", 2)
		end
	end,
})

task.spawn(function()
	while task.wait(0.05) do
		if hum then
			pcall(function()
				hum.WalkSpeed = tonumber(getgenv().currentWalkSpeed) or defaultWalkSpeed
			end)
		end
	end
end)

local SliderJumpPower = Others:CreateSlider({
	Name = "Change JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultJumpPower,
	Callback = function(Value)
		if hum then
			hum.UseJumpPower = true
			hum.JumpPower = Value
		end
	end,
})

local InputJumpPower = Others:CreateInput({
	Name = "Input JumpPower",
	CurrentValue = tostring(defaultJumpPower),
	PlaceholderText = tostring(defaultJumpPower),
	RemoveTextAfterFocusLost = false,
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentJumpPower = num
				SliderJumpPower:Set(num)
				if hum then hum.JumpPower = num end
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid JumpPower value, use numbers!", 2)
		end
	end,
})

Others:CreateButton({ Name = "Reset WalkSpeed", Callback = function() if hum then hum.WalkSpeed = defaultWalkSpeed SliderWalkSpeed:Set(defaultWalkSpeed) InputWalkSpeed:Set(tostring(defaultWalkSpeed)) end end })
Others:CreateButton({ Name = "Reset JumpPower", Callback = function() if hum then hum.JumpPower = defaultJumpPower SliderJumpPower:Set(defaultJumpPower) InputJumpPower:Set(tostring(defaultJumpPower)) end end })

local jumpConnection
Others:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "ToggleInfiniteJump",
    Callback = function(Value)
        if jumpConnection then jumpConnection:Disconnect() end
        if Value then
            jumpConnection = UserInputService.JumpRequest:Connect(function()
                local h = plr.Character and plr.Character:FindFirstChild("Humanoid")
                if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        end
    end,
})

Others:CreateButton({
    Name = "Get TP Tool",
    Callback = function()
        local Backpack = plr:WaitForChild("Backpack")
        if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
        local tool = Instance.new("Tool")
        tool.Name = "TPTool"
        tool.RequiresHandle = false
        tool.CanBeDropped = false
        tool.Parent = Backpack
        local soundId = "rbxassetid://9118823109"
        tool.Activated:Connect(function()
            local mouse = plr:GetMouse()
            local root = char and char:FindFirstChild("HumanoidRootPart")
            if not root then return end
            local targetPos = mouse.Hit.Position + Vector3.new(0,3,0)
            local sound = Instance.new("Sound")
            sound.SoundId = soundId
            sound.Volume = 1
            sound.Parent = root
            sound:Play()
            Debris:AddItem(sound, 2)
            root.CFrame = CFrame.new(targetPos)
        end)
    end,
})

Others:CreateButton({ Name = "Force Reset", Callback = function() local h = char and char:FindFirstChildOfClass("Humanoid"); if h then h.Health = 0 end end })
Others:CreateButton({ Name = "Fly Gui", Callback = function() pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() end) end })

local ToggleNoClip = Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(Value)
		getgenv().noClip = Value
		task.spawn(function()
			while noClip do task.wait(0.001)
				if char then
					for _, v in pairs(char:GetChildren()) do
						if (v:IsA("MeshPart") or v:IsA("Part")) then
							v.CanCollide = not noClip
						end
					end
				end
			end
		end)
	end,
})

local original = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    Ambient = Lighting.Ambient,
    OutdoorAmbient = Lighting.OutdoorAmbient
}

local fullBrightEnabled = false

local ToggleFullBright = Others:CreateToggle({
    Name = "Full Bright",
    CurrentValue = false,
    Flag = "ToggleFullBright",
    Callback = function(state)
        fullBrightEnabled = state
        if fullBrightEnabled then
            Lighting.Brightness = 2
            Lighting.ClockTime = 12
            Lighting.FogEnd = 999999
            Lighting.Ambient = Color3.new(1, 1, 1)
            Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
        else
            for prop, val in pairs(original) do
                Lighting[prop] = val
            end
        end
    end
})

local ButtonCopyYouConfig = Others:CreateButton({
	Name = "Copy You Config",
	Callback = function()
		local configPath = "GG_hub/GG hub - Prison Life.rfld"
		if isfile and readfile and isfile(configPath) then
			local content = readfile(configPath)
			if content and #content > 0 then
				if setclipboard then
					setclipboard(content)
					SendNotification("Sucess", "Your settings have been copied!", 3)
				else
					SendNotification("GG hub", "Error: Your executor does not support copying text!", 3)
				end
			else
				SendNotification("GG hub", "Your configuration is empty or corrupt!", 3)
			end
		else
			SendNotification("GG hub", "Configuration file not found, try again!", 3)
		end
	end
})

local ButtonAntiLag = Others:CreateButton({ Name = "Anti Lag", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/LegiteriumZ/RobloxScript/main/binh%20hub%20fps%20booster%20v1.lua"))() end,})
local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})

Main:CreateButton({
	Name = "Become a Inmate",
	Callback = function()
repeat task.wait(0.001)
local args = {
	game:GetService("Teams"):WaitForChild("Neutral")
}
workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))
task.wait()
local args = {
	game:GetService("Teams"):WaitForChild("Inmates")
}
workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))
until plr.TeamColor == BrickColor.new("Bright orange")
if plr.TeamColor == BrickColor.new("Bright orange") then
plr.PlayerGui.Home.intro.Visible = false
plr.PlayerGui.Home.hud.Visible = true
plr.PlayerGui.Home.fadeFrame.Visible = false
end
end,
})

Main:CreateButton({
  Name = "Become a Criminal",
  Callback = function()
	  local char = plr.Character
	  local hroot = hrp
	  if hroot then
		  local oldCFrame = hroot.CFrame
		  pcall(function()
			  hroot.CFrame = CFrame.new(-976, 109, 2054)
		  end)
		  task.wait(0.15)
		  pcall(function()
			  if oldCFrame then hroot.CFrame = oldCFrame end
		  end)
	  end
  end,
})

Main:CreateButton({
   Name = "Become a Guard",
    Callback = function()
    repeat task.wait(0.001)
local args = {
	game:GetService("Teams"):WaitForChild("Neutral")
}
workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))
task.wait()
local args = {
	game:GetService("Teams"):WaitForChild("Guards")
}
workspace:WaitForChild("Remote"):WaitForChild("TeamEvent"):FireServer(unpack(args))
until plr.TeamColor == BrickColor.new("Bright blue")
if plr.TeamColor == BrickColor.new("Bright blue") then
plr.PlayerGui.Home.intro.Visible = false
plr.PlayerGui.Home.hud.Visible = true
plr.PlayerGui.Home.fadeFrame.Visible = false
end
    end,
})

Teleports:CreateButton({
   Name = "Teleport To Criminals' base",
   Callback = function()
		local char = plr.Character
		local hroot = hrp
		if hroot then pcall(function() hroot.CFrame = CFrame.new(-921, 95, 2140) end) end
   end,
})

Teleports:CreateButton({
   Name = "Teleport To Prison Fence",
   Callback = function()
		local char = plr.Character
		local hroot = hrp
		if hroot then pcall(function() hroot.CFrame = CFrame.new(856, 125, 2591) end) end
   end,
})

Teleports:CreateButton({
   Name = "Teleport To Prison Saddle",
   Callback = function()
		local char = plr.Character
		local hroot = hrp
		if hroot then pcall(function() hroot.CFrame = CFrame.new(918, 100, 2473) end) end
   end,
})

Teleports:CreateButton({
   Name = "Teleport To City",
   Callback = function()
		local char = plr.Character
		local hroot = hrp
		if hroot then pcall(function() hroot.CFrame = CFrame.new(-324, 54, 1714) end) end
   end,
})

local DropdownSelectGunToGet = Shop:CreateDropdown({
	Name = "Select Gun To Get",
	Options = {"M9", "AK-47", "Remington 870", "M4A1"},
	CurrentOption = nil,
	Flag = "DropdownSelectGunToGet",
	Callback = function(Option)
	if type(Option) == "table" then Option = Option[1] end
        getgenv().currentGetGun = Option or nil
	end,
})

local ButtonGetSelectedGun = Shop:CreateButton({
	Name = "Get Selected Gun",
	Callback = function()
	if getgenv().currentGetGun ~= nil then
	for i,v in pairs(game.Workspace:GetChildren()) do
	if v.Name == getgenv().currentGetGun then
	firetouchinterest(hrp, v, 0)
	end
	end
	end
	end,
})

local Button SpawnCarInYouLocation = Main:CreateButton({
	Name = "Spawn Car In You Location(BETA)",
	Callback = function()
	local oldCFrame = hrp.CFrame
	SendNotification("GG hub", "This function may not work correctly!", 2)
	
	hrp.CFrame = CFrame.new(-910, 95, 2157)
	task.wait(0.1)
	local args = {
	workspace.Prison_ITEMS.buttons:GetChildren()[8]["Car Spawner"]
}
workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))
local args = {
	workspace.Prison_ITEMS.buttons:GetChildren()[8]["Car Spawner"]
}
workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))
local args = {
	workspace.Prison_ITEMS.buttons:GetChildren()[8]["Car Spawner"]
}
workspace:WaitForChild("Remote"):WaitForChild("ItemHandler"):InvokeServer(unpack(args))
task.wait(0.45)
if not workspace.CarContainer:FindFirstChild("Sedan") then
hrp.CFrame = oldCFrame
SendNotification("Error", "An error occurred, please try again!", 2)
else
hrp.CFrame = workspace.CarContainer:FindFirstChild("Sedan"):FindFirstChild("Body"):FindFirstChild("VehicleSeat").CFrame
task.wait(0.8)
hrp.CFrame = oldCFrame
end
	end,
})

Rayfield:LoadConfiguration()
