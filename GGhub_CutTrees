local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local TS = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")

local char, hum, hrp
local function updateCharacter(c)
    char = c or plr.Character or plr.CharacterAdded:Wait()
    hum = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed = 18
local defaultJumpPower = 50

getgenv().SendNotification = function(title, content, duration, image)
if Rayfield then
        Rayfield:Notify({
   Title = title or "GG hub",
   Content = content or "",
   Duration = duration or 3,
   Image = image or 5107182098,
})
end
end

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
local Window = Rayfield:CreateWindow({
    Name = "GG hub - " .. gameName,
    Icon = 16570037140,
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by DNzinGG",
    ShowText = "GG hub",
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
    ConfigurationSaving = { Enabled = true, FolderName = "GG_hub", FileName = "GG hub - Cut Trees" }
})

local Info = Window:CreateTab("Infos", 0)
local Main = Window:CreateTab("Main", 124620632231839)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SectionInfos = Info:CreateSection("Infos")
Info:CreateParagraph({Title = "Creator", Content = "DNzinGG"})
local SectionUpdateLog = Info:CreateSection("Update Log")

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Change WalkSpeed",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultWalkSpeed,
	Callback = function(v)
		getgenv().currentWalkSpeed = v
	end,
})

local InputWalkSpeed = Others:CreateInput({
	Name = "Input WalkSpeed",
	CurrentValue = tostring(defaultWalkSpeed),
	PlaceholderText = tostring(defaultWalkSpeed),
	RemoveTextAfterFocusLost = false,
	Flag = "InputWalkSpeed",
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentWalkSpeed = num
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid WalkSpeed value, use numbers!", 2)
		end
	end,
})

task.spawn(function()
	while task.wait(0.05) do
		if hum then
			pcall(function()
				hum.WalkSpeed = tonumber(getgenv().currentWalkSpeed) or defaultWalkSpeed
			end)
		end
	end
end)

local SliderJumpPower = Others:CreateSlider({
	Name = "Change JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultJumpPower,
	Callback = function(Value)
		if hum then
			hum.UseJumpPower = true
			hum.JumpPower = Value
		end
	end,
})

local InputJumpPower = Others:CreateInput({
	Name = "Input JumpPower",
	CurrentValue = tostring(defaultJumpPower),
	PlaceholderText = tostring(defaultJumpPower),
	RemoveTextAfterFocusLost = false,
	Flag = "InputJumpPower",
	Callback = function(Text)
		local num = tonumber(Text)
		if num then
			if num <= 1000 then
				getgenv().currentJumpPower = num
				if hum then hum.JumpPower = num end
			else
				SendNotification("GG hub", "The maximum value is 1000!", 2)
			end
		else
			SendNotification("GG hub", "Invalid JumpPower value, use numbers!", 2)
		end
	end,
})

Others:CreateButton({ Name = "Reset WalkSpeed", Callback = function() if hum then hum.WalkSpeed = defaultWalkSpeed SliderWalkSpeed:Set(defaultWalkSpeed) InputWalkSpeed:Set(tostring(defaultWalkSpeed)) end end })
Others:CreateButton({ Name = "Reset JumpPower", Callback = function() if hum then hum.JumpPower = defaultJumpPower SliderJumpPower:Set(defaultJumpPower) InputJumpPower:Set(tostring(defaultJumpPower)) end end })

local jumpConnection
Others:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "ToggleInfiniteJump",
    Callback = function(Value)
        if jumpConnection then jumpConnection:Disconnect() end
        if Value then
            jumpConnection = UserInputService.JumpRequest:Connect(function()
                local h = plr.Character and plr.Character:FindFirstChild("Humanoid")
                if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        end
    end,
})

Others:CreateButton({
    Name = "Get TP Tool",
    Callback = function()
        local Backpack = plr:WaitForChild("Backpack")
        if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
        local tool = Instance.new("Tool")
        tool.Name = "TPTool"
        tool.RequiresHandle = false
        tool.CanBeDropped = false
        tool.Parent = Backpack
        local soundId = "rbxassetid://9118823109"
        tool.Activated:Connect(function()
            local mouse = plr:GetMouse()
            local root = char and char:FindFirstChild("HumanoidRootPart")
            if not root then return end
            local targetPos = mouse.Hit.Position + Vector3.new(0,3,0)
            local sound = Instance.new("Sound")
            sound.SoundId = soundId
            sound.Volume = 1
            sound.Parent = root
            sound:Play()
            Debris:AddItem(sound, 2)
            root.CFrame = CFrame.new(targetPos)
        end)
    end,
})

Others:CreateButton({ Name = "Force Reset", Callback = function() local h = char and char:FindFirstChildOfClass("Humanoid"); if h then h.Health = 0 end end })
Others:CreateButton({ Name = "Fly Gui", Callback = function() pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() end) end })

local ToggleNoClip = Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(Value)
		getgenv().noClip = Value
		task.spawn(function()
			while noClip do task.wait(0.001)
				if char then
					for _, v in pairs(char:GetChildren()) do
						if (v:IsA("MeshPart") or v:IsA("Part")) then
							v.CanCollide = not noClip
						end
					end
				end
			end
		end)
	end,
})

local original = {
    Brightness = Lighting.Brightness,
    ClockTime = Lighting.ClockTime,
    FogEnd = Lighting.FogEnd,
    Ambient = Lighting.Ambient,
    OutdoorAmbient = Lighting.OutdoorAmbient
}

local fullBrightEnabled = false

local ToggleFullBright = Others:CreateToggle({
    Name = "Full Bright",
    CurrentValue = false,
    Flag = "ToggleFullBright",
    Callback = function(state)
        fullBrightEnabled = state
        if fullBrightEnabled then
            Lighting.Brightness = 2
            Lighting.ClockTime = 12
            Lighting.FogEnd = 999999
            Lighting.Ambient = Color3.new(1, 1, 1)
            Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
        else
            for prop, val in pairs(original) do
                Lighting[prop] = val
            end
        end
    end
})

local ButtonCopyYouConfig = Others:CreateButton({
	Name = "Copy You Config",
	Callback = function()
		local configPath = "GG_hub/GG hub - Cut Trees.rfld"
		if isfile and readfile and isfile(configPath) then
			local content = readfile(configPath)
			if content and #content > 0 then
				if setclipboard then
					setclipboard(content)
					SendNotification("Sucess", "Your settings have been copied!", 3)
				else
					SendNotification("GG hub", "Error: Your executor does not support copying text!", 3)
				end
			else
				SendNotification("GG hub", "Your configuration is empty or corrupt!", 3)
			end
		else
			SendNotification("GG hub", "Configuration file not found, try again!", 3)
		end
	end
})

local ButtonAntiLag = Others:CreateButton({ Name = "Anti Lag", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/LegiteriumZ/RobloxScript/main/binh%20hub%20fps%20booster%20v1.lua"))() end,})
local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})

local ToggleAutoCutTrees = Main:CreateToggle({
	Name = "Auto Cut Trees",
	CurrentValue = false,
	Flag = "ToggleAutoCutTrees",
	Callback = function(Value)
	getgenv().autoCut = Value
	
	while autoCut do task.wait(0.0001)
for _,v in pairs(workspace.TreesFolder:GetChildren()) do
if v:IsA("Model") and v:FindFirstChild("Tree") then
local args = {
	"play"
}
game:GetService("ReplicatedStorage"):WaitForChild("Signal"):WaitForChild("Game"):FireServer(unpack(args))
task.wait()
local args = {
	"damage",
	tostring(v)
}
game:GetService("ReplicatedStorage"):WaitForChild("Signal"):WaitForChild("Tree"):FireServer(unpack(args))
end
end
end
	end,
})

local ToggleAutoCollectChests = Main:CreateToggle({
	Name = "Auto Collect Chests",
	CurrentValue = false,
	Flag = "ToggleAutoCollectChests",
	Callback = function(Value)
	getgenv().autoChest = Value
	
	while autoChest do task.wait(0.1)
	local args = {
	"play"
}
game:GetService("ReplicatedStorage"):WaitForChild("Signal"):WaitForChild("Game"):FireServer(unpack(args))
	for _,v in pairs(workspace.ChestFolder:GetChildren()) do
	if autoChest then
	if v:IsA("Model") and v:FindFirstChild("Hitpart") then
	if v then
	hrp.CFrame = v.root.CFrame
	task.wait(0.1)
	fireproximityprompt(v.Hitpart.ProximityPrompt, 0)
	task.wait()
	fireproximityprompt(v.Hitpart.ProximityPrompt, 1)
	else
	break
	end
	end
	end
	end
	end
	end,
})

Rayfield:LoadConfiguration()
