local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local TS = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")

local char, hum, hrp
local function updateCharacter(c)
    char = c or plr.Character or plr.CharacterAdded:Wait()
    hum = char:WaitForChild("Humanoid")
    hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then updateCharacter(plr.Character) else plr.CharacterAdded:Wait(); updateCharacter(plr.Character) end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed = 30
local defaultJumpPower = 60
local originalTool = "Combat"
getgenv().currentBoss = "None"
getgenv().autoScrolls = false
getgenv().currentItem = "None"
getgenv().autoKillNinja = false
getgenv().autoBoss = false
getgenv().autoCollectCash = false

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
local Window = Rayfield:CreateWindow({
    Name = "GG hub - " .. gameName,
    Icon = 16570037140,
    LoadingTitle = "Loading...",
    LoadingSubtitle = "by DNzinGG",
    ShowText = "GG hub",
    Theme = "Amethyst",
    ToggleUIKeybind = "K",
    DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
    ConfigurationSaving = { Enabled = true, FolderName = "GG_hub", FileName = "GG hub - Ninja Tycoon" }
})

local Info = Window:CreateTab("Infos", 0)
local Main = Window:CreateTab("Main", 124620632231839)
local RyoShop = Window:CreateTab("RyoShop", 106150658366153)
local Shop = Window:CreateTab("Shop", 11385395241)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SectionInfos = Info:CreateSection("Infos")
Info:CreateParagraph({Title = "Creator", Content = "DNzinGG"})
local SectionUpdateLog = Info:CreateSection("Update Log")

local function getTools()
    local tools = {}
    local backpack = plr:FindFirstChild("Backpack")
    if backpack then
        for _, v in ipairs(backpack:GetChildren()) do if v:IsA("Tool") then table.insert(tools, v.Name) end end
    end
    if char then
    for _, v in ipairs(char:GetChildren()) do if v:IsA("Tool") then table.insert(tools, v.Name) end end
    end
    if #tools == 0 then table.insert(tools, "Combat") end
    return tools
end

local DropdownSelectWeapon = Main:CreateDropdown({
    Name = "Select Weapon(not recommend Seishanoo)",
    Options = getTools(),
    CurrentOption = "Combat",
    MultipleOptions = false,
    Callback = function(Option)
        if type(Option) == "table" then Option = Option[1] end
        originalTool = Option or "Combat"
    end,
})
Main:CreateButton({ Name = "Refresh Weapon", Callback = function() DropdownSelectWeapon:Refresh(getTools()) end })

local SliderWalkSpeed = Others:CreateSlider({
    Name = "Change WalkSpeed",
    Range = {0, 1000},
    Increment = 5,
    CurrentValue = hum and hum.WalkSpeed or defaultWalkSpeed,
    Callback = function(Value) if hum then hum.WalkSpeed = Value end end,
})
local SliderJumpPower = Others:CreateSlider({
    Name = "Change JumpPower",
    Range = {0, 1000},
    Increment = 5,
    CurrentValue = hum and hum.JumpPower or defaultJumpPower,
    Callback = function(Value) if hum then hum.JumpPower = Value end end,
})
Others:CreateButton({ Name = "Reset WalkSpeed", Callback = function() if hum then hum.WalkSpeed = defaultWalkSpeed SliderWalkSpeed:Set(defaultWalkSpeed) end end })
Others:CreateButton({ Name = "Reset JumpPower", Callback = function() if hum then hum.JumpPower = defaultJumpPower SliderJumpPower:Set(defaultJumpPower) end end })

local jumpConnection
Others:CreateToggle({
    Name = "Infinite Jump",
    CurrentValue = false,
    Flag = "Infinite Jump",
    Callback = function(Value)
        if jumpConnection then jumpConnection:Disconnect() end
        if Value then
            jumpConnection = UserInputService.JumpRequest:Connect(function()
                local h = plr.Character and plr.Character:FindFirstChild("Humanoid")
                if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        end
    end,
})

Others:CreateButton({
    Name = "Get TP Tool",
    Callback = function()
        local Backpack = plr:WaitForChild("Backpack")
        if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
        local tool = Instance.new("Tool")
        tool.Name = "TPTool"
        tool.RequiresHandle = false
        tool.CanBeDropped = false
        tool.Parent = Backpack
        local soundId = "rbxassetid://9118823109"
        tool.Activated:Connect(function()
            local mouse = plr:GetMouse()
            local root = char and char:FindFirstChild("HumanoidRootPart")
            if not root then return end
            local targetPos = mouse.Hit.Position + Vector3.new(0,3,0)
            local sound = Instance.new("Sound")
            sound.SoundId = soundId
            sound.Volume = 1
            sound.Parent = root
            sound:Play()
            Debris:AddItem(sound, 2)
            root.CFrame = CFrame.new(targetPos)
        end)
    end,
})

Others:CreateButton({ Name = "Force Reset", Callback = function() local h = char and char:FindFirstChildOfClass("Humanoid"); if h then h.Health = 0 end end })
Others:CreateButton({ Name = "Fly Gui", Callback = function() pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))() end) end })

local function findPromptAndPart(root)
    for _, d in ipairs(root:GetDescendants()) do if d:IsA("ProximityPrompt") then return d, d.Parent end end
    return nil, root:FindFirstChildWhichIsA("BasePart") or root.PrimaryPart
end

local function collectScrolls()
    if not getgenv().autoScrolls then return end
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    for _, obj in ipairs(Workspace:GetChildren()) do
        local name = obj.Name or ""
        if type(name) == "string" and (name == "CashScroll" or name == "EScroll" or name:match("Scroll")) then
            local prompt, part = findPromptAndPart(obj)
            if part and hrp then
                pcall(function() hrp.CFrame = part.CFrame + Vector3.new(0,2.5,0) end)
                task.wait(0.12)
                if prompt then pcall(fireproximityprompt, prompt)
                else pcall(function() firetouchinterest(hrp, part, 0); task.wait(0.05); firetouchinterest(hrp, part, 1) end) end
                task.wait(0.2)
            end
        end
    end
end

local function findNearestNPC(hrp)
    if not hrp then return nil end
    local nearest, minDist = nil, math.huge
    for _, obj in ipairs(Workspace:GetChildren()) do
        if obj:IsA("Model") and (obj.Name == "Rogue Ninja" or obj.Name == "Reanimated Ninja") then
            local npcHrp = obj:FindFirstChild("HumanoidRootPart")
            local npcHum = obj:FindFirstChildOfClass("Humanoid")
            if npcHrp and npcHum and npcHum.Health > 0 then
                local dist = (npcHrp.Position - hrp.Position).Magnitude
                if dist < minDist then minDist, nearest = dist, obj end
            end
        end
    end
    return nearest
end

local function safeActivateTool(tool)
    if not tool then return end
    pcall(function() if typeof(tool.Activate) == "function" then tool:Activate() end end)
    pcall(function() if tool:FindFirstChild("Attack") and tool.Attack.FireServer then tool.Attack:FireServer() end end)
end

local seishanooEquipped = false
local function equipTool(name)
    if not name then return nil end
    local tool = (char and char:FindFirstChild(name)) or (plr:FindFirstChild("Backpack") and plr.Backpack:FindFirstChild(name))
    if not tool then return nil end
    if string.find(tool.Name, "Seishanoo") then
        if not seishanooEquipped then
            seishanooEquipped = true
            hum.Died:Connect(function() task.wait(5) seishanooEquipped = false end)
task.wait()
        end
    end
    if tool.Parent ~= char then pcall(function() tool.Parent = char end); task.wait(0.06) end
    return tool.Parent == char and tool or nil
    end

local function attackNPC(npc)
    if not npc or not char or not hum then return end
    local npcHum = npc:FindFirstChildOfClass("Humanoid")
    local npcHrp = npc:FindFirstChild("HumanoidRootPart")
    if not npcHum or not npcHrp then return end
    while npcHum.Health > 0 and hum.Health > 0 and (getgenv().autoKillNinja or getgenv().autoBoss) do
        if getgenv().autoScrolls then collectScrolls() end
        local root = char:FindFirstChild("HumanoidRootPart")
        if not root then break end
        pcall(function() root.CFrame = npcHrp.CFrame * CFrame.new(0,0,4) end)
        local toolObj = equipTool(originalTool)
        safeActivateTool(toolObj)
        pcall(function()
            if toolObj and toolObj:FindFirstChild("RemoteEvent") then toolObj.RemoteEvent:FireServer() end
            local remote = char:FindFirstChild("SeishaAttack") and char:FindFirstChild("Skill") and char.SeishaAttack:FindFirstChild("RemoteEvent")
            if remote then remote:FireServer() end
        end)
        task.wait(0.18)
    end
end
local BossOptions = {"Kaguyai","Nadara","Coldjason","Juubito","Oroshimaro","Mizouki","Pain"}
local SelectedBosses = {}
local BossDropdown = Main:CreateDropdown({
    Name = "Select Boss",
    Options = BossOptions,
    CurrentOption = nil,
    MultipleOptions = true,
    Flag = "Select Boss",
    Callback = function(Options)
        if type(Options) == "table" then SelectedBosses = Options else SelectedBosses = {Options} end
        local cleaned = {}
        for _, v in ipairs(SelectedBosses) do if v ~= "" then table.insert(cleaned, v) end end
        SelectedBosses = cleaned
    end,
})

local function getAliveSelectedBosses()
    local bosses = {}
    for _, obj in ipairs(Workspace:GetChildren()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") and obj:FindFirstChild("HumanoidRootPart") then
            for _, name in ipairs(SelectedBosses) do
                if obj.Name == name then
                    local bHum = obj:FindFirstChildOfClass("Humanoid")
                    if bHum and bHum.Health > 0 then table.insert(bosses, obj) end
                    break
                end
            end
        end
    end
    return bosses
end

Main:CreateToggle({
    Name = "Auto kill Ninjas",
    CurrentValue = false,
    Flag = "Auto Kill Ninjas",
    Callback = function(Value)
        getgenv().autoKillNinja = Value
        task.spawn(function()
            while getgenv().autoKillNinja do
                task.wait(0.001)
                if getgenv().autoBoss and #getAliveSelectedBosses() > 0 then task.wait(0.3) else
                    local hrp = char and char:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        local target = findNearestNPC(hrp)
                        if target then attackNPC(target) end
                    end
                end
            end
        end)
    end,
})

Main:CreateToggle({
    Name = "Auto kill Boss",
    CurrentValue = false,
    Flag = "Auto Kill Boss",
    Callback = function(Value)
        getgenv().autoBoss = Value
        task.spawn(function()
            while getgenv().autoBoss do
                task.wait(0.001)
                local bosses = getAliveSelectedBosses()
                if #bosses > 0 then attackNPC(bosses[1]) end
            end
        end)
    end,
})

Main:CreateToggle({
    Name = "Auto Collect Scrolls",
    CurrentValue = false,
    Flag = "Auto Collect Scrolls",
    Callback = function(Value)
        getgenv().autoScrolls = Value
        task.spawn(function()
            while getgenv().autoScrolls do
                task.wait(1)
                collectScrolls()
            end
        end)
    end,
})

Main:CreateToggle({
    Name = "Auto Collect Cash From Your Tycoon",
    CurrentValue = false,
    Flag = "Auto Collect Cash From Your Tycoon",
    Callback = function(Value)
        getgenv().autoCollectCash = Value
        task.spawn(function()
            while getgenv().autoCollectCash do
                task.wait(1)
                local hrp = char and char:FindFirstChild("HumanoidRootPart")
                local kit = Workspace:FindFirstChild("Zednov's Tycoon Kit")
                if hrp and kit and kit:FindFirstChild("Tycoons") then
                    for _, base in pairs(kit.Tycoons:GetChildren()) do
                        if base:FindFirstChild("Owner") and base.Owner.Value == plr and base:FindFirstChild("Essentials") and base.Essentials:FindFirstChild("Giver") then
                            pcall(function()
                                firetouchinterest(hrp, base.Essentials.Giver, 0)
                                task.wait(0.05)
                                firetouchinterest(hrp, base.Essentials.Giver, 1)
                            end)
                        end
                    end
                end
            end
        end)
    end,
})

Teleports:CreateButton({ Name = "Teleport to Store", Callback = function()
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if hrp then hrp.CFrame = CFrame.new(764, 732, -486) end
end })

Teleports:CreateButton({ Name = "Teleport to your Tycoon", Callback = function()
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    local kit = Workspace:FindFirstChild("Zednov's Tycoon Kit")
    if hrp and kit and kit:FindFirstChild("Tycoons") then
        for _, base in pairs(kit.Tycoons:GetChildren()) do
            if base:FindFirstChild("Owner") and base.Owner.Value == plr and base:FindFirstChild("Essentials") and base.Essentials:FindFirstChild("Spawn") then
                hrp.CFrame = base.Essentials.Spawn.CFrame
            end
        end
    end
end })

local clanNames = {"Akatsuke", "Hotate Clan", "Hyago Clan", "Kazeka Clan", "Otsutsushi Clan", "Sarukobi Clan", "Sonju Clan", "Uchika Clan", "Uzumonki Clan"}
for _, clan in ipairs(clanNames) do
    Teleports:CreateButton({
        Name = "Teleport to "..clan,
        Callback = function()
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            local kit = Workspace:FindFirstChild("Zednov's Tycoon Kit")
            if hrp and kit and kit:FindFirstChild("Tycoons") and kit.Tycoons:FindFirstChild(clan) and kit.Tycoons[clan]:FindFirstChild("Essentials") and kit.Tycoons[clan].Essentials:FindFirstChild("Spawn") then
                hrp.CFrame = kit.Tycoons[clan].Essentials.Spawn.CFrame
            end
        end,
    })
end

local function getShop()
    local items = {}
    for _, v in ipairs(Workspace.Shop.Button:GetChildren()) do
        if v:IsA("Model") then table.insert(items, v.Name) end
    end
    if #items == 0 then table.insert(items, nil) end
    return items
end

local DropdownSelectItemShop = Shop:CreateDropdown({
    Name = "Select Item to Buy",
    Options = getShop(),
    CurrentOption = nil,
    MultipleOptions = false,
    Flag = "Select Item To Buy",
    Callback = function(Option)
        if type(Option) == "table" then Option = Option[1] end
        getgenv().currentItem = Option or nil
    end,
})

Shop:CreateButton({
    Name = "Buy Item",
    Callback = function()
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        for _, item in pairs(Workspace.Shop.Button:GetChildren()) do
            if item:IsA("Model") and item.Name == getgenv().currentItem then
                local touchPart = item:FindFirstChild("Head") or item:FindFirstChildWhichIsA("BasePart")
                if touchPart then
                    pcall(function()
                        firetouchinterest(hrp, touchPart, 0)
                        task.wait(0.05)
                        firetouchinterest(hrp, touchPart, 1)
                    end)
                end
            end
        end
    end,
})

Shop:CreateButton({
    Name = "Buy All Items",
    Callback = function()
        local hrp = char and char:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        for _, item in pairs(Workspace.Shop.Button:GetChildren()) do
            if item:IsA("Model") then
                local touchPart = item:FindFirstChild("Head") or item:FindFirstChildWhichIsA("BasePart")
                if touchPart then
                    pcall(function()
                        firetouchinterest(hrp, touchPart, 0)
                        task.wait(0.05)
                        firetouchinterest(hrp, touchPart, 1)
                    end)
                end
            end
        end
    end,
})

RyoShop:CreateToggle({
    Name = "Auto Activate Lava Release Ryo",
    CurrentValue = false,
    Flag = "Auto Activate Lava Release Ryo",
    Callback = function(Value)
        getgenv().autoLavaRelease = Value
        if Value then
                while getgenv().autoLavaRelease do task.wait(0.2)
                    if hum and hum.Health <= 0 then
                        task.wait(4.3)
                        pcall(function(a)
                            local playerGui = plr:WaitForChild("PlayerGui"):WaitForChild("RyoShop"):WaitForChild("Frame"):WaitForChild("Buttons"):WaitForChild("Lava"):WaitForChild("Event")
                            playerGui:FireServer(plr)
                        end)
                    end
                end
        end
    end,
})

local ButtonAntiLag = Others:CreateButton({ Name = "Anti Lag", Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/LegiteriumZ/RobloxScript/main/binh%20hub%20fps%20booster%20v1.lua"))() end,})
local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})
