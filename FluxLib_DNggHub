local Flux = {RainbowColorValue = 0, HueSelectionPosition = 0}
local PresetColor = Color3.fromRGB(66, 134, 255)
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CloseBind = Enum.KeyCode.RightControl

local FluxLib = Instance.new("ScreenGui")
FluxLib.Name = "FluxLib"
FluxLib.Parent = game.CoreGui
FluxLib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
FluxLib.ResetOnSpawn = false

-- Atualização de cores rainbow
coroutine.wrap(function()
    while true do
        task.wait()
        Flux.RainbowColorValue = Flux.RainbowColorValue + 1 / 255
        Flux.HueSelectionPosition = Flux.HueSelectionPosition + 1
        if Flux.RainbowColorValue >= 1 then
            Flux.RainbowColorValue = 0
        end
        if Flux.HueSelectionPosition >= 80 then
            Flux.HueSelectionPosition = 0
        end
    end
end)()

-- Função de arrastar
local function MakeDraggable(topbarobject, object)
    local Dragging, DragInput, DragStart, StartPosition
    local function Update(input)
        local Delta = input.Position - DragStart
        object.Position = UDim2.new(
            StartPosition.X.Scale, StartPosition.X.Offset + Delta.X,
            StartPosition.Y.Scale, StartPosition.Y.Offset + Delta.Y
        )
    end
    topbarobject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            DragStart = input.Position
            StartPosition = object.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end)
    topbarobject.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            DragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == DragInput and Dragging then
            Update(input)
        end
    end)
end

function Flux:Window(text, bottom, mainclr, toclose)
    CloseBind = toclose or Enum.KeyCode.RightControl
    PresetColor = mainclr or Color3.fromRGB(66, 134, 255)
    local fs = false
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = FluxLib
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.ClipsDescendants = true

    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 5)
    MainCorner.Parent = MainFrame

    local LeftFrame = Instance.new("Frame")
    LeftFrame.Name = "LeftFrame"
    LeftFrame.Parent = MainFrame
    LeftFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 195)
    LeftFrame.Size = UDim2.new(0, 205, 0, 484)
    local LeftCorner = Instance.new("UICorner")
    LeftCorner.CornerRadius = UDim.new(0, 5)
    LeftCorner.Parent = LeftFrame

    local Drag = Instance.new("Frame")
    Drag.Name = "Drag"
    Drag.Parent = MainFrame
    Drag.BackgroundTransparency = 1
    Drag.Size = UDim2.new(0, 501, 0, 23)
    Drag.Position = UDim2.new(0.290, 0, 0, 0)

    MakeDraggable(Drag, MainFrame)
    MakeDraggable(LeftFrame, MainFrame)

    MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.6, true)

    -- Toggle GUI
    local uitoggled = false
    UserInputService.InputBegan:Connect(function(io, processed)
        if not processed and io.KeyCode == CloseBind then
            if not uitoggled then
                MainFrame:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.6, true)
                uitoggled = true
                task.wait(0.5)
                FluxLib.Enabled = false
            else
                MainFrame:TweenSize(UDim2.new(0, 706, 0, 484), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.6, true)
                FluxLib.Enabled = true
                uitoggled = false
            end
        end
    end)
end
