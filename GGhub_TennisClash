local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")
local RunService = game:GetService("RunService")

local plr = Players.LocalPlayer
local char, hum, hrp

local function updateCharacter(c)
	char = c or plr.Character or plr.CharacterAdded:Wait()
	hum = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then
	updateCharacter(plr.Character)
else
	plr.CharacterAdded:Wait()
	updateCharacter(plr.Character)
end

plr.CharacterAdded:Connect(updateCharacter)

getgenv().currentWalkSpeed = 28
getgenv().currentJumpPower = 52
local defaultWalkSpeed = 28
local defaultJumpPower = 52
getgenv().currentArena = nil
getgenv().currentPracticeArena = nil

getgenv().SendNotification = function(title, content, duration, image)
	if Rayfield then
		Rayfield:Notify({
			Title = title or "GG hub",
			Content = content or "",
			Duration = duration or 3,
			Image = image or 5107182098,
		})
	end
end

local Window = Rayfield:CreateWindow({
	Name = "GG hub - Tennis Clash",
	Icon = 16570037140,
	LoadingTitle = "Loading...",
	LoadingSubtitle = "by DNzinGG",
	ShowText = "GG hub",
	Theme = "Amethyst",
	ToggleUIKeybind = "K",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "GG_hub",
		FileName = "GG hub - Tennis Clash"
	}
})

local Main = Window:CreateTab("Main", 124620632231839)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Others = Window:CreateTab("Others", 12122755689)

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Select WalkSpeed",
	Range = {0, 1000},
	CurrentValue = defaultWalkSpeed,
	Increment = 5,
	Callback = function(Value)
		getgenv().currentWalkSpeed = Value
	end,
})

local SliderJumpPower = Others:CreateSlider({
	Name = "Select JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultJumpPower,
	Callback = function(Value)
		getgenv().currentJumpPower = Value
	end,
})

RunService.Heartbeat:Connect(function()
	if hum then
		hum.WalkSpeed = getgenv().currentWalkSpeed
		hum.UseJumpPower = true
		hum.JumpPower = getgenv().currentJumpPower
	end
end)

Others:CreateButton({
	Name = "Reset WalkSpeed",
	Callback = function()
		if hum then
			hum.WalkSpeed = defaultWalkSpeed
			getgenv().currentWalkSpeed = defaultWalkSpeed
			SliderWalkSpeed:Set(defaultWalkSpeed)
		end
	end
})

Others:CreateButton({
	Name = "Reset JumpPower",
	Callback = function()
		if hum then
			hum.JumpPower = defaultJumpPower
			getgenv().currentJumpPower = defaultJumpPower
			SliderJumpPower:Set(defaultJumpPower)
		end
	end
})

local jumpConnection
Others:CreateToggle({
	Name = "Infinite Jump",
	CurrentValue = false,
	Flag = "ToggleInfiniteJump",
	Callback = function(Value)
		if jumpConnection then
			jumpConnection:Disconnect()
		end
		if Value then
			jumpConnection = UserInputService.JumpRequest:Connect(function()
				if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
			end)
		end
	end,
})

Others:CreateButton({
	Name = "Get TP Tool",
	Callback = function()
		local Backpack = plr:WaitForChild("Backpack")
		if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
		local tool = Instance.new("Tool")
		tool.Name = "TPTool"
		tool.RequiresHandle = false
		tool.CanBeDropped = false
		tool.Parent = Backpack
		local soundId = "rbxassetid://9118823109"
		tool.Activated:Connect(function()
			local mouse = plr:GetMouse()
			if not hrp then return end
			local targetPos = mouse.Hit.Position + Vector3.new(0, 3, 0)
			local sound = Instance.new("Sound")
			sound.SoundId = soundId
			sound.Volume = 1
			sound.Parent = hrp
			sound:Play()
			Debris:AddItem(sound, 2)
			hrp.CFrame = CFrame.new(targetPos)
		end)
	end,
})

Others:CreateButton({
	Name = "Force Reset",
	Callback = function()
		if hum then hum.MaxHealth = 0 hum.Health = 0 end
	end,
})

Others:CreateButton({
	Name = "Fly Gui",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
		end)
	end,
})

Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(Value)
		getgenv().noClip = Value
	end,
})

RunService.Stepped:Connect(function()
	if getgenv().noClip and char then
		for _, v in pairs(char:GetChildren()) do
			if (v:IsA("MeshPart") or v:IsA("Part")) and v ~= hrp then
				v.CanCollide = false
			end
		end
	end
end)

Teleports:CreateButton({
	Name = "Teleport To Lobby",
	Callback = function()
		if hrp then
			hrp.CFrame = CFrame.new(2906, 35, -2995) + Vector3.new(0, 3, 0)
		end
	end,
})

Main:CreateToggle({
	Name = "Auto Throw Ball",
	CurrentValue = false,
	Flag = "ToggleAutoThrow",
	Callback = function(Value)
		getgenv().autoThrow = Value
		while getgenv().autoThrow do
			task.wait(0.25)
			local args = {{
				CamPos = Vector3.new(9183.22, 21.28, -2934.73),
				HitPos = Vector3.new(9165.14, 13.78, -2986.18),
				HitBallType = 1,
				ClientTick = tick(),
				CamDir = Vector3.new(-0.42, -0.22, -0.87),
				AttackMoveSpeed = Vector3.new(-1.29, 0, -34.34)
			}}
			game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("HitBallRF"):InvokeServer(unpack(args))
		end
	end,
})

Teleports:CreateDropdown({
	Name = "Select Arena",
	Options = {"Arena1","Arena2","Arena3","Arena4","Arena5","Arena6"},
	CurrentOption = nil,
	Flag = "DropdownSelectArena",
	MultipleOptions = false,
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentArena = Option
	end,
})

Teleports:CreateButton({
	Name = "Teleport to Arena",
	Callback = function()
		if not hrp or not getgenv().currentArena then return end
		local pos = {
			Arena1 = Vector3.new(3074.73, 7.56, -2997.79),
			Arena2 = Vector3.new(77.73, 7.58, -2997.79),
			Arena3 = Vector3.new(-4545.59, 7.58, -2997.79),
			Arena4 = Vector3.new(9167.53, 7.58, -2997.79),
			Arena5 = Vector3.new(12580.61, 7.58, -2997.79),
			Arena6 = Vector3.new(17922.83, 7.58, -2997.79)
		}
		local target = pos[getgenv().currentArena]
		if target then hrp.CFrame = CFrame.new(target) end
	end,
})

Main:CreateToggle({
	Name = "Auto Perfect Throw Ball (BETA)",
	CurrentValue = false,
	Flag = "ToggleAutoPerfectThrow",
	Callback = function(Value)
		getgenv().AutoPerfect = Value
		if Value then
			SendNotification("GG hub", "This feature is in BETA!", 1.5)
		end
		while getgenv().AutoPerfect do
			task.wait(0.5)
			local args = {
	{
		CamPos = vector.create(84.67233276367188, 39.1356315612793, -2934.89453125),
		HitPos = vector.create(69.90843200683594, 19.849084854125977, -2970.172119140625),
		HitBallType = 7,
		ClientTick = 1760048746.780932,
		CamDir = vector.create(-0.40748146176338196, -0.406902015209198, -0.8175510168075562),
		AttackMoveSpeed = vector.zero
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("HitBallRF"):InvokeServer(unpack(args))
end
	end,
})

Teleports:CreateDropdown({
	Name = "Select Practice Arena",
	Options = {"Arena1","Arena2","Arena3","Arena4","Arena5","Arena6"},
	CurrentOption = nil,
	Flag = "DropdownSelectPracticeArena",
	MultipleOptions = false,
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentPracticeArena = Option
	end,
})

Teleports:CreateButton({
	Name = "Teleport To Practice Arena",
	Callback = function()
		SendNotification("GG hub", "In Development...", 2)
	end,
})
