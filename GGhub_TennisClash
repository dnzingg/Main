local success, Rayfield = pcall(function()
	return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)
if not success then Rayfield = nil end

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local plr = Players.LocalPlayer
local char, hum, hrp

local function updateCharacter(c)
	char = c or plr.Character or plr.CharacterAdded:Wait()
	hum = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end

if plr.Character then
	updateCharacter(plr.Character)
else
	plr.CharacterAdded:Wait()
	updateCharacter(plr.Character)
end
plr.CharacterAdded:Connect(updateCharacter)

local defaultWalkSpeed, defaultJumpPower = 28, 52
getgenv().currentJumpPower = defaultJumpPower
getgenv().currentArena, getgenv().currentPracticeArena = nil, nil
getgenv().autoStrike, getgenv().autoSmash, getgenv().NoClip = false, false, false
getgenv().esp, getgenv().espArena, getgenv().espPlayers, getgenv().espPlayersNear = false, false, false, false

getgenv().SendNotification = function(title, content, duration, image)
	if Rayfield then
		Rayfield:Notify({
			Title = title or "GG hub",
			Content = content or "",
			Duration = duration or 3,
			Image = image or 5107182098
		})
	else
		pcall(function()
			StarterGui:SetCore("SendNotification", {
				Title = title or "GG hub",
				Text = content or "",
				Duration = duration or 3
			})
		end)
	end
end

local Window

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
local gameName = gameInfo.Name
if Rayfield then
	Window = Rayfield:CreateWindow({
		Name = "GG hub - " .. gameName,
		Icon = 16570037140,
		LoadingTitle = "Loading...",
		LoadingSubtitle = "by DNzinGG",
		ShowText = "GG hub",
		Theme = "Amethyst",
		ToggleUIKeybind = "K",
		DisableRayfieldPrompts = true,
   DisableBuildWarnings = true,
		ConfigurationSaving = {
			Enabled = true,
			FolderName = "GG_hub",
			FileName = "GG hub - Tennis Clash"
		}
	})
else
	warn("Rayfield não carregado — UI desabilitada.")
end

if not Window then return end

local Main = Window:CreateTab("Main", 124620632231839)
local Teleports = Window:CreateTab("Teleports", 6723742952)
local Aimbot = Window:CreateTab("Aimbot", 74133076168703)
local Esp = Window:CreateTab("Esp", 120129574453255)
local Others = Window:CreateTab("Others", 12122755689)

local SliderWalkSpeed = Others:CreateSlider({
	Name = "Change WalkSpeed",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = hum and hum.WalkSpeed or defaultWalkSpeed,
	Callback = function(v)
		if hum then hum.WalkSpeed = v end
	end
})

local SliderJumpPower = Others:CreateSlider({
	Name = "Select JumpPower",
	Range = {0, 1000},
	Increment = 5,
	CurrentValue = defaultJumpPower,
	Callback = function(v)
		getgenv().currentJumpPower = v
	end
})

task.spawn(function()
	while task.wait(0.1) do
		if hum then
			pcall(function()
				hum.UseJumpPower = true
				hum.JumpPower = tonumber(getgenv().currentJumpPower) or defaultJumpPower
			end)
		end
	end
end)

Others:CreateButton({
	Name = "Reset WalkSpeed",
	Callback = function()
		if hum then
			hum.WalkSpeed = defaultWalkSpeed
			SliderWalkSpeed:Set(defaultWalkSpeed)
		end
	end
})

Others:CreateButton({
	Name = "Reset JumpPower",
	Callback = function()
		if hum then
			hum.JumpPower = defaultJumpPower
			getgenv().currentJumpPower = defaultJumpPower
			SliderJumpPower:Set(defaultJumpPower)
		end
	end
})

local jumpConnection
Others:CreateToggle({
	Name = "Infinite Jump",
	CurrentValue = false,
	Flag = "ToggleInfiniteJump",
	Callback = function(v)
		if jumpConnection then jumpConnection:Disconnect(); jumpConnection = nil end
		if v then
			jumpConnection = UserInputService.JumpRequest:Connect(function()
				if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
			end)
		end
	end
})

Others:CreateButton({
	Name = "Get TP Tool",
	Callback = function()
		local Backpack = plr:WaitForChild("Backpack")
		if Backpack:FindFirstChild("TPTool") then Backpack.TPTool:Destroy() end
		local tool = Instance.new("Tool")
		tool.Name = "TPTool"
		tool.RequiresHandle = false
		tool.CanBeDropped = false
		tool.Parent = Backpack
		local soundId = "rbxassetid://9118823109"
		tool.Activated:Connect(function()
			if not hrp then return end
			local mouse = plr:GetMouse()
			local targetPos = mouse.Hit.Position + Vector3.new(0, 3, 0)
			local sound = Instance.new("Sound")
			sound.SoundId = soundId
			sound.Volume = 1
			sound.Parent = hrp
			sound:Play()
			Debris:AddItem(sound, 2)
			hrp.CFrame = CFrame.new(targetPos)
		end)
	end
})

Others:CreateButton({
	Name = "Force Reset",
	Callback = function()
		if hum then hum.Health = 0 end
	end
})

Others:CreateButton({
	Name = "Fly Gui",
	Callback = function()
		pcall(function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
		end)
	end
})

Others:CreateToggle({
	Name = "No Clip",
	CurrentValue = false,
	Flag = "ToggleNoClip",
	Callback = function(v)
		getgenv().NoClip = v
	end
})

RunService.Heartbeat:Connect(function()
	if char and getgenv().NoClip then
		for _, v in pairs(char:GetChildren()) do
			if v:IsA("BasePart") then
				pcall(function() v.CanCollide = false end)
			end
		end
	end
end)

Teleports:CreateButton({
	Name = "Teleport To Lobby",
	Callback = function()
		if hrp then hrp.CFrame = CFrame.new(2906, 35, -2995) + Vector3.new(0, 3, 0) end
	end
})

Main:CreateToggle({
	Name = "Auto Strike",
	CurrentValue = false,
	Flag = "ToggleAutoStrike",
	Callback = function(v)
		getgenv().autoStrike = v
		if v then
			task.spawn(function()
				while getgenv().autoStrike do
					task.wait(0.25)
					pcall(function()
						local remotes = ReplicatedStorage:FindFirstChild("Remotes")
						if remotes and remotes:FindFirstChild("HitBallRF") and hrp then
							local dir = hrp.CFrame.LookVector
							local pos = hrp.Position + dir * 50
							local args = {{
								CamPos = hrp.Position,
								HitPos = pos,
								HitBallType = 1,
								ClientTick = tick(),
								CamDir = dir,
								AttackMoveSpeed = dir * 30
							}}
							remotes.HitBallRF:InvokeServer(unpack(args))
						end
					end)
				end
			end)
		end
	end
})

Main:CreateToggle({
	Name = "Auto Smash(BETA)",
	CurrentValue = false,
	Flag = "ToggleAutoSmash(BETA)",
	Callback = function(v)
		getgenv().autoSmash = v
		if v then
			SendNotification("GG hub", "This feature is in BETA!", 1.5)
			task.spawn(function()
				while getgenv().autoSmash do
					task.wait(0.5)
					pcall(function()
						if hrp then
							local dir = hrp.CFrame.LookVector
							local startPos = hrp.Position + Vector3.new(0, 3, 0)
							local targetPos = startPos + dir * 10
							local remotes = ReplicatedStorage:FindFirstChild("Remotes")
							if remotes and remotes:FindFirstChild("HitBallRF") then
								local args = {{
									CamPos = startPos,
									HitPos = targetPos,
									HitBallType = 7,
									ClientTick = tick(),
									CamDir = dir,
									AttackMoveSpeed = dir * 10
								}}
								remotes.HitBallRF:InvokeServer(unpack(args))
							end
						end
					end)
				end
			end)
		end
	end
})

local arenaPositions = {
	Arena1 = Vector3.new(3074.73, 7.56, -2997.79),
	Arena2 = Vector3.new(77.73, 7.58, -2997.79),
	Arena3 = Vector3.new(-4545.59, 7.58, -2997.79),
	Arena4 = Vector3.new(9167.53, 7.58, -2997.79),
	Arena5 = Vector3.new(12580.61, 7.58, -2997.79),
	Arena6 = Vector3.new(17922.83, 7.58, -2997.79)
}

Teleports:CreateDropdown({
	Name = "Select Arena",
	Options = {"Arena1","Arena2","Arena3","Arena4","Arena5","Arena6"},
	CurrentOption = nil,
	Flag = "DropdownSelectArena",
	MultipleOptions = false,
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentArena = Option
	end
})

Teleports:CreateButton({
	Name = "Teleport to Arena",
	Callback = function()
		if hrp and getgenv().currentArena then
			local target = arenaPositions[getgenv().currentArena]
			if target then hrp.CFrame = CFrame.new(target) + Vector3.new(0, 3, 0) end
		end
	end
})

Teleports:CreateDropdown({
	Name = "Select Practice Arena",
	Options = {"Arena1","Arena2","Arena3","Arena4","Arena5","Arena6"},
	CurrentOption = nil,
	Flag = "DropdownSelectPracticeArena",
	MultipleOptions = false,
	Callback = function(Option)
		if type(Option) == "table" then Option = Option[1] end
		getgenv().currentPracticeArena = Option
	end
})

Teleports:CreateButton({
	Name = "Teleport To Practice Arena",
	Callback = function()
		SendNotification("GG hub", "In Development...", 2)
	end
})

local function distanceColor(dist,maxDist)
	return Color3.fromHSV((1-math.clamp(dist/maxDist,0,1))*0.33,1,1)
end

local function createEspBall(ballFolder)
	if not ballFolder:FindFirstChild("BallShadow") then return end
	local b = ballFolder.BallShadow
	if b:FindFirstChild("BillboardGui") then return end
	local gui = Instance.new("BillboardGui")
	gui.StudsOffsetWorldSpace = Vector3.new(0,3,0)
	gui.Size = UDim2.new(1,0,1,0)
	gui.AlwaysOnTop = true
	gui.Adornee = b
	gui.Parent = b
	local text = Instance.new("TextLabel")
	text.Size = UDim2.new(5,0,5,0)
	text.BackgroundTransparency = 1
	text.TextScaled = true
	text.Parent = gui
	local stroke = Instance.new("UIStroke")
	stroke.Thickness = 2
	stroke.Parent = text
	local hl = Instance.new("Highlight")
	hl.FillTransparency = 0
	hl.OutlineTransparency = 1
	hl.Parent = b
	task.spawn(function()
		while gui.Parent do
			task.wait(0.1)
			if hrp then
				local dist = (b.Parent.Position-hrp.Position).Magnitude
				text.Text = string.format("Ball\n%.1f",dist)
				text.TextColor3 = distanceColor(dist,120)
				hl.FillColor = text.TextColor3
			end
		end
	end)
end

local function clearEspBall(ballFolder)
	if not ballFolder:FindFirstChild("BallShadow") then return end
	local b = ballFolder.BallShadow
	for _,obj in pairs(b:GetChildren()) do
		if obj:IsA("BillboardGui") or obj:IsA("Highlight") then
			obj:Destroy()
		end
	end
end

local function createEspPlayer(target)
	if not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end
	local hrp2 = target.Character.HumanoidRootPart
	if not target.Character:FindFirstChild("BillboardGui") then
		local gui = Instance.new("BillboardGui")
		gui.Size = UDim2.new(1,0,1,0)
		gui.StudsOffsetWorldSpace = Vector3.new(0,4,0)
		gui.AlwaysOnTop = true
		gui.Parent = target.Character
		gui.Adornee = hrp2
		local text = Instance.new("TextLabel")
		text.Size = UDim2.new(6,0,6,0)
		text.BackgroundTransparency = 1
		text.TextScaled = true
		text.Parent = gui
		local stroke = Instance.new("UIStroke")
		stroke.Thickness = 2
		stroke.Parent = text
		local hl = Instance.new("Highlight")
		hl.FillTransparency = 0.5
		hl.OutlineTransparency = 0
		hl.Parent = target.Character
		task.spawn(function()
			while gui.Parent do
				task.wait(0.1)
				if hrp and hrp2 then
					local dist = (hrp.Position-hrp2.Position).Magnitude
					text.Text = string.format("%s\n%.1f",target.Name,dist)
					local color = distanceColor(dist,120)
					text.TextColor3 = color
					hl.FillColor = color
				end
			end
		end)
	end
end

local function clearEspPlayer(target)
	if not target.Character then return end
	for _,obj in pairs(target.Character:GetChildren()) do
		if obj:IsA("BillboardGui") or obj:IsA("Highlight") then
			obj:Destroy()
		end
	end
end

local function clearAllEsp()
	for _,v in pairs(Workspace:GetDescendants()) do
		if v:IsA("Folder") and v:FindFirstChild("Ball") then
			clearEspBall(v.Ball)
		end
	end
	for _,pl in pairs(Players:GetPlayers()) do
		if pl ~= plr then clearEspPlayer(pl) end
	end
end

Esp:CreateToggle({
	Name="Esp All Balls",
	CurrentValue=false,
	Flag="ToggleEspAllBalls",
	Callback=function(Value)
		getgenv().esp=Value
		if not Value then clearAllEsp() return end
		task.spawn(function()
			while getgenv().esp do
				task.wait(0.2)
				for _,v in pairs(Workspace:GetDescendants()) do
					if not getgenv().esp then break end
					if v:IsA("Folder") and v:FindFirstChild("Ball") then
						createEspBall(v.Ball)
					end
				end
			end
		end)
	end,
})

Esp:CreateToggle({
	Name="Esp Ball From Your Arena",
	CurrentValue=false,
	Flag="ToggleEspBallFromYourArena",
	Callback=function(Value)
		getgenv().espArena=Value
		local maxDistance = 120
		if not Value then clearAllEsp() return end
		task.spawn(function()
			while getgenv().espArena do
				task.wait(0.2)
				if not hrp then continue end
				for _,v in pairs(Workspace:GetDescendants()) do
					if not getgenv().espArena then break end
					if v:IsA("Folder") and v:FindFirstChild("Ball") then
						local dist = (v.Ball.Position-hrp.Position).Magnitude
						if dist<=maxDistance then
							createEspBall(v.Ball)
						else
							clearEspBall(v.Ball)
						end
					end
				end
			end
		end)
	end
})

getgenv().espPlayers = false
getgenv().espPlayersNear = false

local function clearAllPlayerEsp()
	for _,pl in pairs(Players:GetPlayers()) do
		if pl ~= plr then
			clearEspPlayer(pl)
		end
	end
end

Esp:CreateToggle({
	Name="Esp All Players",
	CurrentValue=false,
	Flag="ToggleEspAllPlayers",
	Callback=function(Value)
		getgenv().espPlayers = Value
		if not Value then clearAllPlayerEsp() end
	end
})

Esp:CreateToggle({
	Name="Esp Players From Your Area",
	CurrentValue=false,
	Flag="ToggleEspPlayersFromYourArena",
	Callback=function(Value)
		getgenv().espPlayersNear = Value
		if not Value then clearAllPlayerEsp() end
	end
})

task.spawn(function()
	while true do
		task.wait(0.25)
		if not hrp then continue end
		for _,pl in pairs(Players:GetPlayers()) do
			if pl ~= plr and pl.Character and pl.Character:FindFirstChild("HumanoidRootPart") then
				local hrp2 = pl.Character.HumanoidRootPart
				local dist = (hrp.Position - hrp2.Position).Magnitude
				if getgenv().espPlayers then
					createEspPlayer(pl)
				elseif getgenv().espPlayersNear then
	if dist <= 120 then
		createEspPlayer(pl)
	else
		clearEspPlayer(pl)
	end
else
	clearEspPlayer(pl)
end
end
	end
	end
end)

local ButtonDestroyGui = Others:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
	Rayfield:Destroy()
	end,
})

Rayfield:LoadConfiguration()
